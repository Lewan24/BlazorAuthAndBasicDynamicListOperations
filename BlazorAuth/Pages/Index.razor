@page "/"

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

@if(productsList.Count() > 0)
{
    <table>
        <tr>
            <th>Product name</th>
            <th>Amount</th>
        </tr>
        @foreach(var item in productsList){
            <tr>
                <td><input type="text" value=@item.Product_Name /></td>
                <td><input type="number" min=1 max=100 value=@item.Amount /></td>
            </tr>
        }
    </table>
}

<br /><br />

<AuthorizeView>
    <Authorized>
        <fieldset style="border:inset; width:max-content; padding:20px">
            <legend style="float:none; width:auto"><h3>Add Products</h3></legend>

            <table>
                <tr>
                    <th>Product Name</th>
                    <th>Amount</th>
                </tr>
                <tr>
                    <td>
                        <input type="text" @bind-value=@temp_product_name />
                    </td>
                    <td>
                        <input type="number" min=1 max=100 @bind-value=@temp_product_amount />
                    </td>
                </tr>
            </table>
            <br />
            <button type="button" class="btn btn-primary" @onclick="Add_Product" >Add Product</button>
            <button type="button" class="btn btn-primary" @onclick="Remove_Product" >Remove Product</button>
            <button type="button" class="btn btn-primary" @onclick="Clear_Products" >Clear List</button>
        </fieldset>
    </Authorized>
    <NotAuthorized>
        <h2>You can not operate on List while you aren't signed in.</h2>
        <a href="Identity/Account/Login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string? temp_product_name;
    private int temp_product_amount = 1;

    private List<Product> productsList = new List<Product>();

    private class Product{
        private string product_name;
        public string Product_Name { 
            get => this.product_name; 
            set => this.product_name = value; 
        }

        private int amount;
        public int Amount{ 
            get => this.amount; 
            set => this.amount = value; 
        }

        public Product(string name, int amount){
            this.Product_Name = name;
            this.Amount = amount;
        }
    }

    private void Add_Product(){
        if (!string.IsNullOrWhiteSpace(this.temp_product_name)){
            this.productsList.Add(new Product(temp_product_name, temp_product_amount));
            this.temp_product_name = string.Empty;
            this.temp_product_amount = 1;
        }
    }

    private void Remove_Product(){
        if(this.productsList.Count() > 0)
            this.productsList.Remove(this.productsList.Last());
    }

    private void Clear_Products(){
        this.productsList.Clear();
    }
}